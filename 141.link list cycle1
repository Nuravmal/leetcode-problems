/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
       
        if(head==NULL||head->next==NULL)
        return false;
        ListNode*slow=head;
        ListNode*fast=head->next;// beacause loop meri slow!=fast chlni va je mein dovein same e krdunga loop nhi chlugi
        while(slow!=fast)
        {
            if(fast==NULL||fast->next==NULL)
                return false;
            slow=slow->next;
            fast=fast->next->next;
        }
    return true;}
};


M2- using sets

class Solution {
public:
    bool hasCycle(ListNode *head) {
        set<ListNode*>nodecheck;
        ListNode*temp=head;
        while(temp!=NULL)
        {
            if(nodecheck.find(temp)!=nodecheck.end())
               {return true;
                                  }
            else
            {
                nodecheck.insert(temp);
            }
            temp=temp->next;
        }
        
        return false;
    }
};
