Write a program to find the n-th ugly number.

Ugly numbers are positive numbers whose prime factors only include 2, 3, 5.

Example:

Input: n = 10
Output: 12
Explanation: 1, 2, 3, 4, 5, 6, 8, 9, 10, 12 is the sequence of the first 10 ugly numbers.
Note:

1 is typically treated as an ugly number.
n does not exceed 1690.

hint 1
The naive approach is to call isUgly for every number until you reach the nth one. Most numbers are not ugly. Try to focus your effort on generating only the ugly ones.
hint 2
An ugly number must be multiplied by either 2, 3, or 5 from a smaller ugly number.
hint 3
The key is how to maintain the order of the ugly numbers. Try a similar approach of merging from three sorted lists: L1, L2, and L3.

hint 4

Assume you have Uk, the kth ugly number. Then Uk+1 must be Min(L1 * 2, L2 * 3, L3 * 5).


explanation: acc to hint 2 larger ugly number can be generated by multiply with 2, 3, 5 so taking 1 and min(1*2,1*3,1*5) i got second ugly number
then two++ implies ugly number having 2 has prime factor increases and then it take min (2*2,1*3,1*5) and three++;
basically two, three, five are maintaing three list of indexes and taking min of all to make series of ugly number;

class Solution {
public:
    int nthUglyNumber(int n) {
        int two=0;
        int three=0;
        int five=0;
        vector<int>res(1,1);
        n-=1;
        int next;
        while(n--)
        {
            next=min(res[two]*2,min(res[three]*3,res[five]*5));
            if(next==res[two]*2)
                two++;
            if(next==res[three]*3)
                three++;
            if(next==res[five]*5)
                five++;
            res.push_back(next);


        }
        return res.back();

    }
};



















naive approach
i m trying to check each number nd reduce it to 1 to find it is ugly or not
tle
class Solution {
public:
    bool isUgly(int num) {
        if(num<1)
            return false;

        while(num!=1)
        {
            if(num%2==0)
                num/=2;

             else if(num%3==0)
                num/=3;

            else if(num%5==0)
                num/=5;
            else
                break;
        }
        if(num==1)
            return true;
        return false;

    }

    int nthUglyNumber(int n) {

int i=2;

        if(n==1)
            return 1;
        int result=0;
        while(n>1)
        {if(isUgly(i)==true)
        {result=i;
            n--;
        }
             i++;

        }

        return result;
    }
};


M2:
try to multiply number with 2,3,5 and choose min one to add into alrady generating list
