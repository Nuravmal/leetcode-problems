class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        
        int sum=0;int i,j;
        vector<int>result;
        
        for( i=0;i<nums.size();i++)
        {
            for (j=nums.size()-1;j>i;j--)
            {
                sum=nums[i]+nums[j];
                if(sum==target)
                {
                    result.push_back(i);
                    result.push_back(j);
                    break;
                }
            }
        }
        
        return result;
    }};
        
        
        concept: two elements are added and then if ==target returned
        alternative 
       loop(
       num[j]=target-num[i]
        
)




usinf maps
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
  map<int,int>m1;
        for(int i=0;i<nums.size();i++)
        {
            auto it=m1.find(target-nums[i]);
            if(it!=m1.end())
            {
                return{it->second,i};
            }
            m1[nums[i]]=i;
        }
        
return{};        
        
    }
};
